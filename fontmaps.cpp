#include "fontmaps.h"

void FontMap::getTerminalFont1_UV(std::tr1::unordered_map<std::string,GLfloat*> &uv_map)
{

GLfloat *uv = new float[8]; 
uv[0] =0.875f; uv[1] =0.575f; 
uv[2] =1.0f; uv[3] =0.575f; 
uv[4] =1.0f; uv[5] =0.66499996f; 
uv[6] =0.875f; uv[7] =0.66499996f; 
std::string key = "!"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.796875f; uv[1] =0.0f; 
uv[2] =1.0f; uv[3] =0.0f; 
uv[4] =1.0f; uv[5] =0.09f; 
uv[6] =0.796875f; uv[7] =0.09f; 
key = "#"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.15625f; uv[1] =0.29f; 
uv[2] =0.3125f; uv[3] =0.29f; 
uv[4] =0.3125f; uv[5] =0.39f; 
uv[6] =0.15625f; uv[7] =0.39f; 
key = "$"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.328125f; uv[1] =0.0f; 
uv[2] =0.59375f; uv[3] =0.0f; 
uv[4] =0.59375f; uv[5] =0.09f; 
uv[6] =0.328125f; uv[7] =0.09f; 
key = "%"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.395f; 
uv[2] =0.15625f; uv[3] =0.395f; 
uv[4] =0.15625f; uv[5] =0.485f; 
uv[6] =0.0f; uv[7] =0.485f; 
key = "0"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.34375f; uv[1] =0.875f; 
uv[2] =0.453125f; uv[3] =0.875f; 
uv[4] =0.453125f; uv[5] =0.96500003f; 
uv[6] =0.34375f; uv[7] =0.96500003f; 
key = "1"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.15625f; uv[1] =0.395f; 
uv[2] =0.3125f; uv[3] =0.395f; 
uv[4] =0.3125f; uv[5] =0.485f; 
uv[6] =0.15625f; uv[7] =0.485f; 
key = "2"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.3125f; uv[1] =0.395f; 
uv[2] =0.46875f; uv[3] =0.395f; 
uv[4] =0.46875f; uv[5] =0.485f; 
uv[6] =0.3125f; uv[7] =0.485f; 
key = "3"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.46875f; uv[1] =0.395f; 
uv[2] =0.625f; uv[3] =0.395f; 
uv[4] =0.625f; uv[5] =0.485f; 
uv[6] =0.46875f; uv[7] =0.485f; 
key = "4"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.625f; uv[1] =0.395f; 
uv[2] =0.78125f; uv[3] =0.395f; 
uv[4] =0.78125f; uv[5] =0.485f; 
uv[6] =0.625f; uv[7] =0.485f; 
key = "5"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.78125f; uv[1] =0.395f; 
uv[2] =0.9375f; uv[3] =0.395f; 
uv[4] =0.9375f; uv[5] =0.485f; 
uv[6] =0.78125f; uv[7] =0.485f; 
key = "6"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.485f; 
uv[2] =0.15625f; uv[3] =0.485f; 
uv[4] =0.15625f; uv[5] =0.57500005f; 
uv[6] =0.0f; uv[7] =0.57500005f; 
key = "7"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.15625f; uv[1] =0.485f; 
uv[2] =0.3125f; uv[3] =0.485f; 
uv[4] =0.3125f; uv[5] =0.57500005f; 
uv[6] =0.15625f; uv[7] =0.57500005f; 
key = "8"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.3125f; uv[1] =0.485f; 
uv[2] =0.46875f; uv[3] =0.485f; 
uv[4] =0.46875f; uv[5] =0.57500005f; 
uv[6] =0.3125f; uv[7] =0.57500005f; 
key = "9"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.0f; 
uv[2] =0.328125f; uv[3] =0.0f; 
uv[4] =0.328125f; uv[5] =0.105f; 
uv[6] =0.0f; uv[7] =0.105f; 
key = "@"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.140625f; uv[1] =0.665f; 
uv[2] =0.25f; uv[3] =0.665f; 
uv[4] =0.25f; uv[5] =0.77500004f; 
uv[6] =0.140625f; uv[7] =0.77500004f; 
key = "["; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.1875f; uv[1] =0.26f; 
uv[2] =0.390625f; uv[3] =0.26f; 
uv[4] =0.390625f; uv[5] =0.28f; 
uv[6] =0.1875f; uv[7] =0.28f; 
key = "_"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.671875f; uv[1] =0.575f; 
uv[2] =0.875f; uv[3] =0.575f; 
uv[4] =0.875f; uv[5] =0.635f; 
uv[6] =0.671875f; uv[7] =0.635f; 
key = "a"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.105f; 
uv[2] =0.203125f; uv[3] =0.105f; 
uv[4] =0.203125f; uv[5] =0.195f; 
uv[6] =0.0f; uv[7] =0.195f; 
key = "&"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.453125f; uv[1] =0.875f; 
uv[2] =0.5f; uv[3] =0.875f; 
uv[4] =0.5f; uv[5] =0.96500003f; 
uv[6] =0.453125f; uv[7] =0.96500003f; 
key = "'"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.29f; 
uv[2] =0.15625f; uv[3] =0.29f; 
uv[4] =0.15625f; uv[5] =0.39499998f; 
uv[6] =0.0f; uv[7] =0.39499998f; 
key = "*"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.796875f; uv[1] =0.105f; 
uv[2] =0.984375f; uv[3] =0.105f; 
uv[4] =0.984375f; uv[5] =0.19f; 
uv[6] =0.796875f; uv[7] =0.19f; 
key = "b"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.765f; 
uv[2] =0.125f; uv[3] =0.765f; 
uv[4] =0.125f; uv[5] =0.87f; 
uv[6] =0.0f; uv[7] =0.87f; 
key = "\\"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.6875f; uv[1] =0.665f; 
uv[2] =0.859375f; uv[3] =0.665f; 
uv[4] =0.859375f; uv[5] =0.725f; 
uv[6] =0.6875f; uv[7] =0.725f; 
key = "c"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.25f; uv[1] =0.92f; 
uv[2] =0.3125f; uv[3] =0.92f; 
uv[4] =0.3125f; uv[5] =0.995f; 
uv[6] =0.25f; uv[7] =0.995f; 
key = ":"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.3125f; uv[1] =0.35f; 
uv[2] =0.390625f; uv[3] =0.35f; 
uv[4] =0.390625f; uv[5] =0.375f; 
uv[6] =0.3125f; uv[7] =0.375f; 
key = ","; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.8125f; uv[1] =0.195f; 
uv[2] =0.984375f; uv[3] =0.195f; 
uv[4] =0.984375f; uv[5] =0.28f; 
uv[6] =0.8125f; uv[7] =0.28f; 
key = "d"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.46875f; uv[1] =0.485f; 
uv[2] =0.625f; uv[3] =0.485f; 
uv[4] =0.625f; uv[5] =0.57500005f; 
uv[6] =0.46875f; uv[7] =0.57500005f; 
key = "÷"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.390625f; uv[1] =0.26f; 
uv[2] =0.4375f; uv[3] =0.26f; 
uv[4] =0.4375f; uv[5] =0.28f; 
uv[6] =0.390625f; uv[7] =0.28f; 
key = "."; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.25f; uv[1] =0.75f; 
uv[2] =0.421875f; uv[3] =0.75f; 
uv[4] =0.421875f; uv[5] =0.81f; 
uv[6] =0.25f; uv[7] =0.81f; 
key = "e"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.625f; uv[1] =0.485f; 
uv[2] =0.78125f; uv[3] =0.485f; 
uv[4] =0.78125f; uv[5] =0.57500005f; 
uv[6] =0.625f; uv[7] =0.57500005f; 
key = "="; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.5f; uv[1] =0.81f; 
uv[2] =0.609375f; uv[3] =0.81f; 
uv[4] =0.609375f; uv[5] =0.895f; 
uv[6] =0.5f; uv[7] =0.895f; 
key = "f"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.5625f; uv[1] =0.29f; 
uv[2] =0.734375f; uv[3] =0.29f; 
uv[4] =0.734375f; uv[5] =0.375f; 
uv[6] =0.5625f; uv[7] =0.375f; 
key = "g"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.78125f; uv[1] =0.485f; 
uv[2] =0.9375f; uv[3] =0.485f; 
uv[4] =0.9375f; uv[5] =0.57500005f; 
uv[6] =0.78125f; uv[7] =0.57500005f; 
key = ">"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.25f; uv[1] =0.665f; 
uv[2] =0.390625f; uv[3] =0.665f; 
uv[4] =0.390625f; uv[5] =0.75f; 
uv[6] =0.25f; uv[7] =0.75f; 
key = "h"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.9375f; uv[1] =0.395f; 
uv[2] =1.0f; uv[3] =0.395f; 
uv[4] =1.0f; uv[5] =0.48000002f; 
uv[6] =0.9375f; uv[7] =0.48000002f; 
key = "i"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.609375f; uv[1] =0.81f; 
uv[2] =0.6875f; uv[3] =0.81f; 
uv[4] =0.6875f; uv[5] =0.92f; 
uv[6] =0.609375f; uv[7] =0.92f; 
key = "j"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.4375f; uv[1] =0.195f; 
uv[2] =0.625f; uv[3] =0.195f; 
uv[4] =0.625f; uv[5] =0.28f; 
uv[6] =0.4375f; uv[7] =0.28f; 
key = "k"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.9375f; uv[1] =0.485f; 
uv[2] =1.0f; uv[3] =0.485f; 
uv[4] =1.0f; uv[5] =0.57f; 
uv[6] =0.9375f; uv[7] =0.57f; 
key = "l"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.140625f; uv[1] =0.885f; 
uv[2] =0.234375f; uv[3] =0.885f; 
uv[4] =0.234375f; uv[5] =0.995f; 
uv[6] =0.140625f; uv[7] =0.995f; 
key = "("; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.575f; 
uv[2] =0.15625f; uv[3] =0.575f; 
uv[4] =0.15625f; uv[5] =0.66499996f; 
uv[6] =0.0f; uv[7] =0.66499996f; 
key = "<"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.3125f; uv[1] =0.29f; 
uv[2] =0.5625f; uv[3] =0.29f; 
uv[4] =0.5625f; uv[5] =0.35f; 
uv[6] =0.3125f; uv[7] =0.35f; 
key = "m"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.5625f; uv[1] =0.665f; 
uv[2] =0.6875f; uv[3] =0.665f; 
uv[4] =0.6875f; uv[5] =0.75f; 
uv[6] =0.5625f; uv[7] =0.75f; 
key = "-"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.75f; uv[1] =0.75f; 
uv[2] =0.890625f; uv[3] =0.75f; 
uv[4] =0.890625f; uv[5] =0.81f; 
uv[6] =0.75f; uv[7] =0.81f; 
key = "n"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.421875f; uv[1] =0.75f; 
uv[2] =0.59375f; uv[3] =0.75f; 
uv[4] =0.59375f; uv[5] =0.81f; 
uv[6] =0.421875f; uv[7] =0.81f; 
key = "o"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.625f; uv[1] =0.195f; 
uv[2] =0.8125f; uv[3] =0.195f; 
uv[4] =0.8125f; uv[5] =0.28f; 
uv[6] =0.625f; uv[7] =0.28f; 
key = "p"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.665f; 
uv[2] =0.140625f; uv[3] =0.665f; 
uv[4] =0.140625f; uv[5] =0.76500005f; 
uv[6] =0.0f; uv[7] =0.76500005f; 
key = "+"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.734375f; uv[1] =0.29f; 
uv[2] =0.90625f; uv[3] =0.29f; 
uv[4] =0.90625f; uv[5] =0.375f; 
uv[6] =0.734375f; uv[7] =0.375f; 
key = "q"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.15625f; uv[1] =0.575f; 
uv[2] =0.3125f; uv[3] =0.575f; 
uv[4] =0.3125f; uv[5] =0.66499996f; 
uv[6] =0.15625f; uv[7] =0.66499996f; 
key = "?"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.3125f; uv[1] =0.575f; 
uv[2] =0.46875f; uv[3] =0.575f; 
uv[4] =0.46875f; uv[5] =0.66499996f; 
uv[6] =0.3125f; uv[7] =0.66499996f; 
key = "\""; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.890625f; uv[1] =0.75f; 
uv[2] =1.0f; uv[3] =0.75f; 
uv[4] =1.0f; uv[5] =0.81f; 
uv[6] =0.890625f; uv[7] =0.81f; 
key = "r"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.140625f; uv[1] =0.775f; 
uv[2] =0.25f; uv[3] =0.775f; 
uv[4] =0.25f; uv[5] =0.885f; 
uv[6] =0.140625f; uv[7] =0.885f; 
key = "]"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.25f; uv[1] =0.81f; 
uv[2] =0.34375f; uv[3] =0.81f; 
uv[4] =0.34375f; uv[5] =0.92f; 
uv[6] =0.25f; uv[7] =0.92f; 
key = ")"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.59375f; uv[1] =0.75f; 
uv[2] =0.75f; uv[3] =0.75f; 
uv[4] =0.75f; uv[5] =0.81f; 
uv[6] =0.59375f; uv[7] =0.81f; 
key = "s"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.90625f; uv[1] =0.29f; 
uv[2] =0.984375f; uv[3] =0.29f; 
uv[4] =0.984375f; uv[5] =0.365f; 
uv[6] =0.90625f; uv[7] =0.365f; 
key = ";"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.87f; 
uv[2] =0.125f; uv[3] =0.87f; 
uv[4] =0.125f; uv[5] =0.975f; 
uv[6] =0.0f; uv[7] =0.975f; 
key = "/"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.859375f; uv[1] =0.665f; 
uv[2] =0.984375f; uv[3] =0.665f; 
uv[4] =0.984375f; uv[5] =0.745f; 
uv[6] =0.859375f; uv[7] =0.745f; 
key = "t"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.34375f; uv[1] =0.81f; 
uv[2] =0.5f; uv[3] =0.81f; 
uv[4] =0.5f; uv[5] =0.875f; 
uv[6] =0.34375f; uv[7] =0.875f; 
key = "u"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.46875f; uv[1] =0.575f; 
uv[2] =0.671875f; uv[3] =0.575f; 
uv[4] =0.671875f; uv[5] =0.64f; 
uv[6] =0.46875f; uv[7] =0.64f; 
key = "v"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.1875f; uv[1] =0.195f; 
uv[2] =0.4375f; uv[3] =0.195f; 
uv[4] =0.4375f; uv[5] =0.26f; 
uv[6] =0.1875f; uv[7] =0.26f; 
key = "w"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.390625f; uv[1] =0.665f; 
uv[2] =0.5625f; uv[3] =0.665f; 
uv[4] =0.5625f; uv[5] =0.73f; 
uv[6] =0.390625f; uv[7] =0.73f; 
key = "x"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.203125f; uv[1] =0.105f; 
uv[2] =0.40625f; uv[3] =0.105f; 
uv[4] =0.40625f; uv[5] =0.195f; 
uv[6] =0.203125f; uv[7] =0.195f; 
key = "y"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.6875f; uv[1] =0.81f; 
uv[2] =0.8125f; uv[3] =0.81f; 
uv[4] =0.8125f; uv[5] =0.875f; 
uv[6] =0.6875f; uv[7] =0.875f; 
key = "z"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.40625f; uv[1] =0.105f; 
uv[2] =0.609375f; uv[3] =0.105f; 
uv[4] =0.609375f; uv[5] =0.195f; 
uv[6] =0.40625f; uv[7] =0.195f; 
key = "ä"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.59375f; uv[1] =0.0f; 
uv[2] =0.796875f; uv[3] =0.0f; 
uv[4] =0.796875f; uv[5] =0.095f; 
uv[6] =0.59375f; uv[7] =0.095f; 
key = "å"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.0f; uv[1] =0.195f; 
uv[2] =0.1875f; uv[3] =0.195f; 
uv[4] =0.1875f; uv[5] =0.29f; 
uv[6] =0.0f; uv[7] =0.29f; 
key = "ë"; 
uv_map[key] = uv; 
uv = new float[8]; 
uv[0] =0.609375f; uv[1] =0.105f; 
uv[2] =0.796875f; uv[3] =0.105f; 
uv[4] =0.796875f; uv[5] =0.195f; 
uv[6] =0.609375f; uv[7] =0.195f; 
key = "ö"; 
uv_map[key] = uv; 
}

void FontMap::getTerminalFont1_DIM(std::tr1::unordered_map<std::string,std::pair<float,float>*> &dim_map)
{
std::string key = "!"; 
dim_map[key] = new std::pair<float,float>(0.53333336f,1.0f); 
key = "#"; 
dim_map[key] = new std::pair<float,float>(0.8666667f,1.0f); 
key = "$"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.1111112f); 
key = "%"; 
dim_map[key] = new std::pair<float,float>(1.1333333f,1.0f); 
key = "0"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "1"; 
dim_map[key] = new std::pair<float,float>(0.46666667f,1.0f); 
key = "2"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "3"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "4"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "5"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "6"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "7"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "8"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "9"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "@"; 
dim_map[key] = new std::pair<float,float>(1.4f,1.1666666f); 
key = "["; 
dim_map[key] = new std::pair<float,float>(0.46666667f,1.2222222f); 
key = "_"; 
dim_map[key] = new std::pair<float,float>(0.8666667f,0.22222222f); 
key = "a"; 
dim_map[key] = new std::pair<float,float>(0.8666667f,0.6666667f); 
key = "&"; 
dim_map[key] = new std::pair<float,float>(0.8666667f,1.0f); 
key = "'"; 
dim_map[key] = new std::pair<float,float>(0.2f,1.0f); 
key = "*"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.1666666f); 
key = "b"; 
dim_map[key] = new std::pair<float,float>(0.8f,0.9444444f); 
key = "\\"; 
dim_map[key] = new std::pair<float,float>(0.53333336f,1.1666666f); 
key = "c"; 
dim_map[key] = new std::pair<float,float>(0.73333335f,0.6666667f); 
key = ":"; 
dim_map[key] = new std::pair<float,float>(0.26666668f,0.8333333f); 
key = ","; 
dim_map[key] = new std::pair<float,float>(0.33333334f,0.2777778f); 
key = "d"; 
dim_map[key] = new std::pair<float,float>(0.73333335f,0.9444444f); 
key = "÷"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "."; 
dim_map[key] = new std::pair<float,float>(0.2f,0.22222222f); 
key = "e"; 
dim_map[key] = new std::pair<float,float>(0.73333335f,0.6666667f); 
key = "="; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "f"; 
dim_map[key] = new std::pair<float,float>(0.46666667f,0.9444444f); 
key = "g"; 
dim_map[key] = new std::pair<float,float>(0.73333335f,0.9444444f); 
key = ">"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "h"; 
dim_map[key] = new std::pair<float,float>(0.6f,0.9444444f); 
key = "i"; 
dim_map[key] = new std::pair<float,float>(0.26666668f,0.9444444f); 
key = "j"; 
dim_map[key] = new std::pair<float,float>(0.33333334f,1.2222222f); 
key = "k"; 
dim_map[key] = new std::pair<float,float>(0.8f,0.9444444f); 
key = "l"; 
dim_map[key] = new std::pair<float,float>(0.26666668f,0.9444444f); 
key = "("; 
dim_map[key] = new std::pair<float,float>(0.4f,1.2222222f); 
key = "<"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "m"; 
dim_map[key] = new std::pair<float,float>(1.0666667f,0.6666667f); 
key = "-"; 
dim_map[key] = new std::pair<float,float>(0.53333336f,0.9444444f); 
key = "n"; 
dim_map[key] = new std::pair<float,float>(0.6f,0.6666667f); 
key = "o"; 
dim_map[key] = new std::pair<float,float>(0.73333335f,0.6666667f); 
key = "p"; 
dim_map[key] = new std::pair<float,float>(0.8f,0.9444444f); 
key = "+"; 
dim_map[key] = new std::pair<float,float>(0.6f,1.1111112f); 
key = "q"; 
dim_map[key] = new std::pair<float,float>(0.73333335f,0.9444444f); 
key = "?"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "\""; 
dim_map[key] = new std::pair<float,float>(0.6666667f,1.0f); 
key = "r"; 
dim_map[key] = new std::pair<float,float>(0.46666667f,0.6666667f); 
key = "]"; 
dim_map[key] = new std::pair<float,float>(0.46666667f,1.2222222f); 
key = ")"; 
dim_map[key] = new std::pair<float,float>(0.4f,1.2222222f); 
key = "s"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,0.6666667f); 
key = ";"; 
dim_map[key] = new std::pair<float,float>(0.33333334f,0.8333333f); 
key = "/"; 
dim_map[key] = new std::pair<float,float>(0.53333336f,1.1666666f); 
key = "t"; 
dim_map[key] = new std::pair<float,float>(0.53333336f,0.8888889f); 
key = "u"; 
dim_map[key] = new std::pair<float,float>(0.6666667f,0.7222222f); 
key = "v"; 
dim_map[key] = new std::pair<float,float>(0.8666667f,0.7222222f); 
key = "w"; 
dim_map[key] = new std::pair<float,float>(1.0666667f,0.7222222f); 
key = "x"; 
dim_map[key] = new std::pair<float,float>(0.73333335f,0.7222222f); 
key = "y"; 
dim_map[key] = new std::pair<float,float>(0.8666667f,1.0f); 
key = "z"; 
dim_map[key] = new std::pair<float,float>(0.53333336f,0.7222222f); 
key = "ä"; 
dim_map[key] = new std::pair<float,float>(0.8666667f,1.0f); 
key = "å"; 
dim_map[key] = new std::pair<float,float>(0.8666667f,1.0555556f); 
key = "ë"; 
dim_map[key] = new std::pair<float,float>(0.8f,1.0555556f); 
key = "ö"; 
dim_map[key] = new std::pair<float,float>(0.8f,1.0f); 

}